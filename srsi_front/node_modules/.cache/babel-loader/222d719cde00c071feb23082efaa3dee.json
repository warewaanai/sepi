{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst TermBlink = props => {\n  _s();\n\n  const {\n    state,\n    setState\n  } = useState(0);\n  useEffect(() => {\n    if (state === undefined) {\n      setState({\n        text: props.children,\n        cursor: false\n      });\n    } else {\n      window.setTimeout(() => setState({\n        text: props.children,\n        cursor: !state.cursor\n      }), 1000);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", state ? state.text : null, \" \"]\n  }, void 0, true);\n};\n\n_s(TermBlink, \"cQT3g5udglP252pjzPhQ2XsxiNI=\");\n\n_c = TermBlink;\nexport default TermBlink;\n\nvar _c;\n\n$RefreshReg$(_c, \"TermBlink\");","map":{"version":3,"sources":["/Users/anai/Desktop/srsi/srsi_front/src/components/termblink/index.js"],"names":["React","useState","useEffect","TermBlink","props","state","setState","undefined","text","children","cursor","window","setTimeout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAK,KAAKE,SAAd,EAAyB;AACrBD,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEJ,KAAK,CAACK,QADP;AAELC,QAAAA,MAAM,EAAE;AAFH,OAAD,CAAR;AAIH,KALD,MAMK;AACDC,MAAAA,MAAM,CAACC,UAAP,CAAkB,MAAMN,QAAQ,CAAC;AAC7BE,QAAAA,IAAI,EAAEJ,KAAK,CAACK,QADiB;AAE7BC,QAAAA,MAAM,EAAE,CAACL,KAAK,CAACK;AAFc,OAAD,CAAhC,EAGI,IAHJ;AAIH;AACJ,GAbQ,CAAT;AAeA,sBAAO;AAAA,oBAAIL,KAAK,GAAGA,KAAK,CAACG,IAAT,GAAgB,IAAzB;AAAA,kBAAP;AACH,CAnBD;;GAAML,S;;KAAAA,S;AAqBN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst TermBlink = props => {\n    const {state, setState} = useState(0);\n\n    useEffect(() => {\n        if (state === undefined) {\n            setState({\n                text: props.children,\n                cursor: false\n            });\n        }\n        else {\n            window.setTimeout(() => setState({\n                text: props.children,\n                cursor: !state.cursor\n            }), 1000);\n        }\n    });\n\n    return <> {state ? state.text : null} </>;\n};\n\nexport default TermBlink;\n"]},"metadata":{},"sourceType":"module"}