{"ast":null,"code":"import _slicedToArray from\"/home/bodo/sepi/srsi_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useRef,useEffect,useState}from'react';import'./stylesheet.scss';import TermBlink from'../../components/termblink';import JsxParser from'react-jsx-parser';import{Link}from'react-router-dom';import Card from'../../components/Card';var MemberPage=function MemberPage(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),content=_useState2[0],setContent=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),meta=_useState4[0],setMeta=_useState4[1];var memberName=props.match.params.name;useEffect(function(){if(content===0)fetch(window.HOST+\"/api/content_member/\"+memberName).then(function(res){return res.json();}).then(function(res){return setContent(res.text);});if(meta===1)fetch(window.HOST+\"/api/meta_member/\"+memberName).then(function(res){return res.json();}).then(function(res){return setMeta(res);});});console.log(meta);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsx(TermBlink,{children:memberName})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Card,{float:\"right\",width:\"360px\",external:true,pic:window.HOST+meta.mainpic}),/*#__PURE__*/_jsx(JsxParser,{disableKeyGeneration:false,components:{Card:Card,Link:Link},jsx:\" \".concat(content,\" \")})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/membri\",children:\"Lista tuturor membrilor\"})]});};export default MemberPage;","map":{"version":3,"sources":["/home/bodo/sepi/srsi_front/src/pages/MemberPage/index.js"],"names":["React","useRef","useEffect","useState","TermBlink","JsxParser","Link","Card","MemberPage","props","content","setContent","meta","setMeta","memberName","match","params","name","fetch","window","HOST","then","res","json","text","console","log","mainpic"],"mappings":"8RAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,eACMN,QAAQ,CAAC,CAAD,CADd,wCACjBO,OADiB,eACRC,UADQ,8BAEAR,QAAQ,CAAC,CAAD,CAFR,yCAEjBS,IAFiB,eAEXC,OAFW,eAGxB,GAAMC,CAAAA,UAAU,CAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,IAAtC,CAEAf,SAAS,CAAC,UAAM,CACZ,GAAIQ,OAAO,GAAK,CAAhB,CACIQ,KAAK,CAACC,MAAM,CAACC,IAAP,CAAc,sBAAd,CAAuCN,UAAxC,CAAL,CAAyDO,IAAzD,CAA8D,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAAjE,EAAiFF,IAAjF,CAAsF,SAAAC,GAAG,QAAIX,CAAAA,UAAU,CAACW,GAAG,CAACE,IAAL,CAAd,EAAzF,EACJ,GAAIZ,IAAI,GAAK,CAAb,CACIM,KAAK,CAACC,MAAM,CAACC,IAAP,CAAc,mBAAd,CAAoCN,UAArC,CAAL,CAAsDO,IAAtD,CAA2D,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAA9D,EAA8EF,IAA9E,CAAmF,SAAAC,GAAG,QAAIT,CAAAA,OAAO,CAACS,GAAD,CAAX,EAAtF,EACP,CALQ,CAAT,CAOAG,OAAO,CAACC,GAAR,CAAYd,IAAZ,EAEA,mBAAO,wCACH,iCAAI,KAAC,SAAD,WAAYE,UAAZ,EAAJ,EADG,cAEH,oCACI,KAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,KAAK,CAAC,OAA1B,CAAkC,QAAQ,KAA1C,CAA2C,GAAG,CAAEK,MAAM,CAACC,IAAP,CAAcR,IAAI,CAACe,OAAnE,EADJ,cAGI,KAAC,SAAD,EACI,oBAAoB,CAAE,KAD1B,CAEI,UAAU,CAAE,CACRpB,IAAI,CAAJA,IADQ,CAERD,IAAI,CAAJA,IAFQ,CAFhB,CAMI,GAAG,YAAMI,OAAN,KANP,EAHJ,GAFG,cAaH,aAbG,cAcH,KAAC,IAAD,EAAM,EAAE,CAAC,SAAT,qCAdG,GAAP,CAgBH,CA9BD,CAgCA,cAAeF,CAAAA,UAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './stylesheet.scss';\nimport TermBlink from '../../components/termblink';\nimport JsxParser from 'react-jsx-parser';\nimport {Link} from 'react-router-dom';\nimport Card from '../../components/Card'\n\n\nconst MemberPage = props => {\n    const [content, setContent] = useState(0);\n    const [meta, setMeta] = useState(1);\n    const memberName = props.match.params.name;\n\n    useEffect(() => {\n        if (content === 0)\n            fetch(window.HOST + \"/api/content_member/\" + memberName).then(res => res.json()).then(res => setContent(res.text));\n        if (meta === 1)\n            fetch(window.HOST + \"/api/meta_member/\" + memberName).then(res => res.json()).then(res => setMeta(res));\n    });\n\n    console.log(meta);\n\n    return <>\n        <h2><TermBlink>{memberName}</TermBlink></h2>\n        <div>\n            <Card float=\"right\" width=\"360px\" external pic={window.HOST + meta.mainpic}/>\n\n            <JsxParser\n                disableKeyGeneration={false}\n                components={{\n                    Card,\n                    Link,\n                }}\n                jsx={` ${content} `}/>\n        </div>\n        <br />\n        <Link to=\"/membri\">Lista tuturor membrilor</Link>\n    </>\n}\n\nexport default MemberPage;\n"]},"metadata":{},"sourceType":"module"}