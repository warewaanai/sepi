{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst TermBlink = props => {\n  _s();\n\n  const [state, setState] = useState(0);\n  useEffect(() => {\n    console.log(state);\n\n    if (state === 0) {\n      setState({\n        text: props.children,\n        cursor: false\n      });\n    } else {\n      window.setTimeout(() => setState({\n        text: props.children + (state.cursor ? '_' : ''),\n        cursor: !state.cursor\n      }), 750);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", state ? state.text : null, \" \"]\n  }, void 0, true);\n};\n\n_s(TermBlink, \"rTLOxV2ROLFIFUMHWk9W3pFX53M=\");\n\n_c = TermBlink;\nexport default TermBlink;\n\nvar _c;\n\n$RefreshReg$(_c, \"TermBlink\");","map":{"version":3,"sources":["/Users/anai/Desktop/srsi/srsi_front/src/components/termblink/index.js"],"names":["React","useState","useEffect","TermBlink","props","state","setState","console","log","text","children","cursor","window","setTimeout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACbC,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEL,KAAK,CAACM,QADP;AAELC,QAAAA,MAAM,EAAE;AAFH,OAAD,CAAR;AAIH,KALD,MAMK;AACDC,MAAAA,MAAM,CAACC,UAAP,CAAkB,MAAMP,QAAQ,CAAC;AAC7BG,QAAAA,IAAI,EAAEL,KAAK,CAACM,QAAN,IAAkBL,KAAK,CAACM,MAAN,GAAe,GAAf,GAAqB,EAAvC,CADuB;AAE7BA,QAAAA,MAAM,EAAE,CAACN,KAAK,CAACM;AAFc,OAAD,CAAhC,EAGI,GAHJ;AAIH;AACJ,GAdQ,CAAT;AAgBA,sBAAO;AAAA,oBAAIN,KAAK,GAAGA,KAAK,CAACI,IAAT,GAAgB,IAAzB;AAAA,kBAAP;AACH,CApBD;;GAAMN,S;;KAAAA,S;AAsBN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst TermBlink = props => {\n    const [state, setState] = useState(0);\n\n    useEffect(() => {\n        console.log(state);\n        if (state === 0) {\n            setState({\n                text: props.children,\n                cursor: false\n            });\n        }\n        else {\n            window.setTimeout(() => setState({\n                text: props.children + (state.cursor ? '_' : ''),\n                cursor: !state.cursor\n            }), 750);\n        }\n    });\n\n    return <> {state ? state.text : null} </>;\n};\n\nexport default TermBlink;\n"]},"metadata":{},"sourceType":"module"}