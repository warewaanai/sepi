{"ast":null,"code":"import resultID from'./resultid';import getResults from'./getresults';/*\n    Pentru probleme legate de format, vezi srsi_back/fetch_results.py\n    Obtine rezultatele la un concurs (contest) de la o anumita clasa (level) si retureneaza o lista L de liste tip T\n    L[0] - capul tabelului\n\n    T[0] -> judet\n    T[1] -> clasa\n    T[2] -> nume\n    T[3...] -> scor\n\n*/var fetchResults=function fetchResults(contest,level){/*window.sessionStorage.setItem(resultID(contest, level), JSON.stringify({\"head\": [\"Judet\", \"Clasa\", \"Nume\", \"P1\", \"P2\", \"P3\"],\n    \"body\": [[\"SJ\", 10, \"Bogdan\", 100, 10, 50]]}));*/window.sessionStorage.setItem(resultID(contest,level),JSON.stringify({\"head\":[\"Judet\",\"Clasa\",\"Nume\",\"labirint\",\"tort\",\"sdistante\",\"matrice\",\"Global\"],\"body\":[[\"GJ\",\"10\",\"Eugen Nodea\",100.0,100.0,0.0,100.0,300.0],[\"GJ\",\"10\",\"Mihai Bunget\",0.0,100.0,100.0,100.0,300.0],[\"DJ\",\"10\",\"Marius Nicoli\",100.0,100.0,0.0,0.0,200.0],[\"GJ\",\"10\",\"Mihai Popescu\",100.0,0.0,0.0,0.0,100.0],[\"NT\",\"10\",\"Stefan Dascalescu\",100.0,0.0,0.0,0.0,100.0],[\"SJ\",\"10\",\"Bogdan Pop\",0.0,0.0,16.0,0.0,16.0],[\"B\",\"10\",\"Gheorghe Manolache\",15.0,0.0,0.0,0.0,15.0],[\"B\",\"10\",\"Costin Oncescu\",0.0,0.0,5.0,0.0,5.0],[\"B\",\"10\",\"Tamio-Vesa Nakajima\",0.0,0.0,0.0,0.0,0.0],[\"B\",\"10\",\"Lucian Bicsi\",0.0,0.0,0.0,0.0,0.0],[\"B\",\"10\",\"Doru Popescu\",0.0,0.0,0.0,0.0,0.0],[\"B\",\"10\",\"petru oprita\",0.0,0.0,0.0,0.0,0.0]]}));/*const api_call = fetch(window.HOST + \"/api/results/\" + contest + \"/\" + level);\n    console.log(api_call);\n    window.sessionStorage.setItem(\n        resultID(contest, level), \n        api_call\n    )*/};export default fetchResults;","map":{"version":3,"sources":["/home/bodo/sepi2/sepi/srsi_front/src/components/scoreboard/Utilities/fetch.js"],"names":["resultID","getResults","fetchResults","contest","level","window","sessionStorage","setItem","JSON","stringify"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,CAAUC,KAAV,CAAoB,CACrC;AACJ,qDACIC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8BP,QAAQ,CAACG,OAAD,CAAUC,KAAV,CAAtC,CAAwDI,IAAI,CAACC,SAAL,CAAe,CAAC,OAAQ,CAAC,OAAD,CAAU,OAAV,CAAmB,MAAnB,CAA2B,UAA3B,CAAuC,MAAvC,CAA+C,WAA/C,CAA4D,SAA5D,CAAuE,QAAvE,CAAT,CAA2F,OAAQ,CAAC,CAAC,IAAD,CAAO,IAAP,CAAa,aAAb,CAA4B,KAA5B,CAAmC,KAAnC,CAA0C,GAA1C,CAA+C,KAA/C,CAAsD,KAAtD,CAAD,CAA+D,CAAC,IAAD,CAAO,IAAP,CAAa,cAAb,CAA6B,GAA7B,CAAkC,KAAlC,CAAyC,KAAzC,CAAgD,KAAhD,CAAuD,KAAvD,CAA/D,CAA8H,CAAC,IAAD,CAAO,IAAP,CAAa,eAAb,CAA8B,KAA9B,CAAqC,KAArC,CAA4C,GAA5C,CAAiD,GAAjD,CAAsD,KAAtD,CAA9H,CAA4L,CAAC,IAAD,CAAO,IAAP,CAAa,eAAb,CAA8B,KAA9B,CAAqC,GAArC,CAA0C,GAA1C,CAA+C,GAA/C,CAAoD,KAApD,CAA5L,CAAwP,CAAC,IAAD,CAAO,IAAP,CAAa,mBAAb,CAAkC,KAAlC,CAAyC,GAAzC,CAA8C,GAA9C,CAAmD,GAAnD,CAAwD,KAAxD,CAAxP,CAAwT,CAAC,IAAD,CAAO,IAAP,CAAa,YAAb,CAA2B,GAA3B,CAAgC,GAAhC,CAAqC,IAArC,CAA2C,GAA3C,CAAgD,IAAhD,CAAxT,CAA+W,CAAC,GAAD,CAAM,IAAN,CAAY,oBAAZ,CAAkC,IAAlC,CAAwC,GAAxC,CAA6C,GAA7C,CAAkD,GAAlD,CAAuD,IAAvD,CAA/W,CAA6a,CAAC,GAAD,CAAM,IAAN,CAAY,gBAAZ,CAA8B,GAA9B,CAAmC,GAAnC,CAAwC,GAAxC,CAA6C,GAA7C,CAAkD,GAAlD,CAA7a,CAAqe,CAAC,GAAD,CAAM,IAAN,CAAY,qBAAZ,CAAmC,GAAnC,CAAwC,GAAxC,CAA6C,GAA7C,CAAkD,GAAlD,CAAuD,GAAvD,CAAre,CAAkiB,CAAC,GAAD,CAAM,IAAN,CAAY,cAAZ,CAA4B,GAA5B,CAAiC,GAAjC,CAAsC,GAAtC,CAA2C,GAA3C,CAAgD,GAAhD,CAAliB,CAAwlB,CAAC,GAAD,CAAM,IAAN,CAAY,cAAZ,CAA4B,GAA5B,CAAiC,GAAjC,CAAsC,GAAtC,CAA2C,GAA3C,CAAgD,GAAhD,CAAxlB,CAA8oB,CAAC,GAAD,CAAM,IAAN,CAAY,cAAZ,CAA4B,GAA5B,CAAiC,GAAjC,CAAsC,GAAtC,CAA2C,GAA3C,CAAgD,GAAhD,CAA9oB,CAAnG,CAAf,CAAxD,EACA;AACJ;AACA;AACA;AACA;AACA,OACC,CAVD,CAYA,cAAeP,CAAAA,YAAf","sourcesContent":["import resultID from './resultid'\nimport getResults from './getresults';\n\n/*\n    Pentru probleme legate de format, vezi srsi_back/fetch_results.py\n    Obtine rezultatele la un concurs (contest) de la o anumita clasa (level) si retureneaza o lista L de liste tip T\n    L[0] - capul tabelului\n\n    T[0] -> judet\n    T[1] -> clasa\n    T[2] -> nume\n    T[3...] -> scor\n\n*/\nconst fetchResults=  (contest, level) => {\n    /*window.sessionStorage.setItem(resultID(contest, level), JSON.stringify({\"head\": [\"Judet\", \"Clasa\", \"Nume\", \"P1\", \"P2\", \"P3\"],\n    \"body\": [[\"SJ\", 10, \"Bogdan\", 100, 10, 50]]}));*/\n    window.sessionStorage.setItem(resultID(contest, level), JSON.stringify({\"head\": [\"Judet\", \"Clasa\", \"Nume\", \"labirint\", \"tort\", \"sdistante\", \"matrice\", \"Global\"], \"body\": [[\"GJ\", \"10\", \"Eugen Nodea\", 100.0, 100.0, 0.0, 100.0, 300.0], [\"GJ\", \"10\", \"Mihai Bunget\", 0.0, 100.0, 100.0, 100.0, 300.0], [\"DJ\", \"10\", \"Marius Nicoli\", 100.0, 100.0, 0.0, 0.0, 200.0], [\"GJ\", \"10\", \"Mihai Popescu\", 100.0, 0.0, 0.0, 0.0, 100.0], [\"NT\", \"10\", \"Stefan Dascalescu\", 100.0, 0.0, 0.0, 0.0, 100.0], [\"SJ\", \"10\", \"Bogdan Pop\", 0.0, 0.0, 16.0, 0.0, 16.0], [\"B\", \"10\", \"Gheorghe Manolache\", 15.0, 0.0, 0.0, 0.0, 15.0], [\"B\", \"10\", \"Costin Oncescu\", 0.0, 0.0, 5.0, 0.0, 5.0], [\"B\", \"10\", \"Tamio-Vesa Nakajima\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"Lucian Bicsi\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"Doru Popescu\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"petru oprita\", 0.0, 0.0, 0.0, 0.0, 0.0]]}));\n    /*const api_call = fetch(window.HOST + \"/api/results/\" + contest + \"/\" + level);\n    console.log(api_call);\n    window.sessionStorage.setItem(\n        resultID(contest, level), \n        api_call\n    )*/\n}\n\nexport default fetchResults;"]},"metadata":{},"sourceType":"module"}