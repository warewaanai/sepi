{"ast":null,"code":"import _slicedToArray from\"/home/bodo/sepi2/sepi/srsi_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import resultID from'./resultid';import getResults from'./getresults';import{useState}from'react';/*\n    Pentru probleme legate de format, vezi srsi_back/fetch_results.py\n    Obtine rezultatele la un concurs (contest) de la o anumita clasa (level) si retureneaza o lista L de liste tip T\n    L[0] - capul tabelului\n\n    T[0] -> judet\n    T[1] -> clasa\n    T[2] -> nume\n    T[3...] -> scor\n\n*/var fetchResults=function fetchResults(contest,level){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),content=_useState2[0],setContent=_useState2[1];/*window.sessionStorage.setItem(resultID(contest, level), JSON.stringify({\"head\": [\"Judet\", \"Clasa\", \"Nume\", \"P1\", \"P2\", \"P3\"],\n    \"body\": [[\"SJ\", 10, \"Bogdan\", 100, 10, 50]]}));*/ //window.sessionStorage.setItem(resultID(contest, level), JSON.stringify({\"head\": [\"Judet\", \"Clasa\", \"Nume\", \"labirint\", \"tort\", \"sdistante\", \"matrice\", \"Global\"], \"body\": [[\"GJ\", \"10\", \"Eugen Nodea\", 100.0, 100.0, 0.0, 100.0, 300.0], [\"GJ\", \"10\", \"Mihai Bunget\", 0.0, 100.0, 100.0, 100.0, 300.0], [\"DJ\", \"10\", \"Marius Nicoli\", 100.0, 100.0, 0.0, 0.0, 200.0], [\"GJ\", \"10\", \"Mihai Popescu\", 100.0, 0.0, 0.0, 0.0, 100.0], [\"NT\", \"10\", \"Stefan Dascalescu\", 100.0, 0.0, 0.0, 0.0, 100.0], [\"SJ\", \"10\", \"Bogdan Pop\", 0.0, 0.0, 16.0, 0.0, 16.0], [\"B\", \"10\", \"Gheorghe Manolache\", 15.0, 0.0, 0.0, 0.0, 15.0], [\"B\", \"10\", \"Costin Oncescu\", 0.0, 0.0, 5.0, 0.0, 5.0], [\"B\", \"10\", \"Tamio-Vesa Nakajima\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"Lucian Bicsi\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"Doru Popescu\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"petru oprita\", 0.0, 0.0, 0.0, 0.0, 0.0]]}));\nfetch(window.HOST+\"/api/results/\"+contest+\"/\"+level).then(function(res){return res.json();}).then(function(res){return setContent(res.text);});console.log(content);window.sessionStorage.setItem(resultID(contest,level),content);};export default fetchResults;","map":{"version":3,"sources":["/home/bodo/sepi2/sepi/srsi_front/src/components/scoreboard/Utilities/fetch.js"],"names":["resultID","getResults","useState","fetchResults","contest","level","content","setContent","fetch","window","HOST","then","res","json","text","console","log","sessionStorage","setItem"],"mappings":"uJAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,QAAT,KAAyB,OAAzB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,CAAUC,KAAV,CAAoB,eACPH,QAAQ,CAAC,CAAD,CADD,wCAC9BI,OAD8B,eACrBC,UADqB,eAErC;AACJ,qDAHyC,CAIrC;AACAC,KAAK,CAACC,MAAM,CAACC,IAAP,CAAc,eAAd,CAAgCN,OAAhC,CAA0C,GAA1C,CAAgDC,KAAjD,CAAL,CAA6DM,IAA7D,CAAkE,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAArE,EAAqFF,IAArF,CAA0F,SAAAC,GAAG,QAAIL,CAAAA,UAAU,CAACK,GAAG,CAACE,IAAL,CAAd,EAA7F,EACAC,OAAO,CAACC,GAAR,CAAYV,OAAZ,EACAG,MAAM,CAACQ,cAAP,CAAsBC,OAAtB,CACIlB,QAAQ,CAACI,OAAD,CAAUC,KAAV,CADZ,CAEIC,OAFJ,EAIH,CAXD,CAaA,cAAeH,CAAAA,YAAf","sourcesContent":["import resultID from './resultid'\nimport getResults from './getresults';\nimport { useState } from 'react';\n\n/*\n    Pentru probleme legate de format, vezi srsi_back/fetch_results.py\n    Obtine rezultatele la un concurs (contest) de la o anumita clasa (level) si retureneaza o lista L de liste tip T\n    L[0] - capul tabelului\n\n    T[0] -> judet\n    T[1] -> clasa\n    T[2] -> nume\n    T[3...] -> scor\n\n*/\nconst fetchResults=  (contest, level) => {\n    const [content, setContent] = useState(0)\n    /*window.sessionStorage.setItem(resultID(contest, level), JSON.stringify({\"head\": [\"Judet\", \"Clasa\", \"Nume\", \"P1\", \"P2\", \"P3\"],\n    \"body\": [[\"SJ\", 10, \"Bogdan\", 100, 10, 50]]}));*/\n    //window.sessionStorage.setItem(resultID(contest, level), JSON.stringify({\"head\": [\"Judet\", \"Clasa\", \"Nume\", \"labirint\", \"tort\", \"sdistante\", \"matrice\", \"Global\"], \"body\": [[\"GJ\", \"10\", \"Eugen Nodea\", 100.0, 100.0, 0.0, 100.0, 300.0], [\"GJ\", \"10\", \"Mihai Bunget\", 0.0, 100.0, 100.0, 100.0, 300.0], [\"DJ\", \"10\", \"Marius Nicoli\", 100.0, 100.0, 0.0, 0.0, 200.0], [\"GJ\", \"10\", \"Mihai Popescu\", 100.0, 0.0, 0.0, 0.0, 100.0], [\"NT\", \"10\", \"Stefan Dascalescu\", 100.0, 0.0, 0.0, 0.0, 100.0], [\"SJ\", \"10\", \"Bogdan Pop\", 0.0, 0.0, 16.0, 0.0, 16.0], [\"B\", \"10\", \"Gheorghe Manolache\", 15.0, 0.0, 0.0, 0.0, 15.0], [\"B\", \"10\", \"Costin Oncescu\", 0.0, 0.0, 5.0, 0.0, 5.0], [\"B\", \"10\", \"Tamio-Vesa Nakajima\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"Lucian Bicsi\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"Doru Popescu\", 0.0, 0.0, 0.0, 0.0, 0.0], [\"B\", \"10\", \"petru oprita\", 0.0, 0.0, 0.0, 0.0, 0.0]]}));\n    fetch(window.HOST + \"/api/results/\" + contest + \"/\" + level).then(res => res.json()).then(res => setContent(res.text));\n    console.log(content);\n    window.sessionStorage.setItem(\n        resultID(contest, level), \n        content\n    )\n}\n\nexport default fetchResults;"]},"metadata":{},"sourceType":"module"}