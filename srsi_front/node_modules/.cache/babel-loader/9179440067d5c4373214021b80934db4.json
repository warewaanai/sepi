{"ast":null,"code":"import resultID from'./resultid';import fetchResults from'./fetch';var getResults=function getResults(contest,level,county){/*if(window.sessionStorage.getItem(resultID(contest, level)) == null\n    || window.sessionStorage.getItem(resultID(contest, level)).length == 0){\n        fetchResults(contest, level);\n    }\n\n    const results = JSON.parse(window.sessionStorage.getItem(resultID(contest, level)));*/return fetchResults(contest,level).then(function(results){var count=0;if(county=='general')return results;//console.log(results);\nreturn{\"head\":[\"Index\"].concat(results[\"head\"]),\"body\":results[\"body\"].filter(function(result){return result[0]==county;}).map(function(result){return[++count].concat(result);})};});};export default getResults;","map":{"version":3,"sources":["/home/bodo/sepi2/sepi/srsi_front/src/components/scoreboard/Utilities/getresults.js"],"names":["resultID","fetchResults","getResults","contest","level","county","then","results","count","concat","filter","result","map"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,SAAzB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAUC,KAAV,CAAiBC,MAAjB,CAA4B,CAE3C;AACJ;AACA;AACA;AACA;AACA,0FACI,MAAOJ,CAAAA,YAAY,CAACE,OAAD,CAAUC,KAAV,CAAZ,CAA6BE,IAA7B,CACH,SAAAC,OAAO,CAAG,CACV,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CAEA,GAAIH,MAAM,EAAI,SAAd,CACI,MAAOE,CAAAA,OAAP,CAEJ;AACA,MAAO,CACH,OAAQ,CAAC,OAAD,EAAUE,MAAV,CAAiBF,OAAO,CAAC,MAAD,CAAxB,CADL,CAEH,OAAQA,OAAO,CAAC,MAAD,CAAP,CAAgBG,MAAhB,CAAuB,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAAC,CAAD,CAAN,EAAaN,MAAjB,EAA7B,EAAsDO,GAAtD,CAA0D,SAAAD,MAAM,QAAI,CAAC,EAAEH,KAAH,EAAUC,MAAV,CAAiBE,MAAjB,CAAJ,EAAhE,CAFL,CAAP,CAIC,CAZE,CAAP,CAaH,CArBD,CAuBA,cAAeT,CAAAA,UAAf","sourcesContent":["import resultID from './resultid'\nimport fetchResults from './fetch'\n\nconst getResults = (contest, level, county) => {\n    \n    /*if(window.sessionStorage.getItem(resultID(contest, level)) == null\n    || window.sessionStorage.getItem(resultID(contest, level)).length == 0){\n        fetchResults(contest, level);\n    }\n\n    const results = JSON.parse(window.sessionStorage.getItem(resultID(contest, level)));*/\n    return fetchResults(contest, level).then(\n        results =>{\n        let count = 0;\n\n        if (county == 'general') \n            return results;\n    \n        //console.log(results);\n        return {\n            \"head\": [\"Index\"].concat(results[\"head\"]),\n            \"body\": results[\"body\"].filter(result => result[0] == county).map(result => [++count].concat(result))\n            };\n        });\n}\n\nexport default getResults;"]},"metadata":{},"sourceType":"module"}