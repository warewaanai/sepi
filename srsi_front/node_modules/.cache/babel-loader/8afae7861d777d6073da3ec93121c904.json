{"ast":null,"code":"import resultID from'./resultid';import fetchResults from'./fetch';var getResults=function getResults(contest,level,county){var scoreIndex=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;/*if(window.sessionStorage.getItem(resultID(contest, level)) == null\n    || window.sessionStorage.getItem(resultID(contest, level)).length == 0){\n        fetchResults(contest, level);\n    }\n\n    const results = JSON.parse(window.sessionStorage.getItem(resultID(contest, level)));*/return fetchResults(contest,level).then(function(results){var count=0,lastScore=-1;if(county=='general')return{\"head\":[\"Index\"].concat(results[\"head\"]),\"body\":results[\"body\"].map(function(result){if(lastScore!=result[result.length-scoreIndex])count+=1;lastScore=result[result.length-scoreIndex];return[count].concat(result);})};//console.log(results);\nreturn{\"head\":[\"Index\"].concat(results[\"head\"]),\"body\":results[\"body\"].filter(function(result){return result[0]==county;}).map(function(result){return[++count].concat(result);})};});};export default getResults;","map":{"version":3,"sources":["/home/bodo/sepi2/sepi/srsi_front/src/components/scoreboard/Utilities/getresults.js"],"names":["resultID","fetchResults","getResults","contest","level","county","scoreIndex","then","results","count","lastScore","concat","map","result","length","filter"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,SAAzB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAUC,KAAV,CAAiBC,MAAjB,CAA0C,IAAjBC,CAAAA,UAAiB,2DAAN,CAAM,CAEzD;AACJ;AACA;AACA;AACA;AACA,0FACI,MAAOL,CAAAA,YAAY,CAACE,OAAD,CAAUC,KAAV,CAAZ,CAA6BG,IAA7B,CACH,SAAAC,OAAO,CAAG,CACV,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CAAeC,SAAS,CAAG,CAAC,CAA5B,CAEA,GAAIL,MAAM,EAAI,SAAd,CACI,MAAO,CACP,OAAQ,CAAC,OAAD,EAAUM,MAAV,CAAiBH,OAAO,CAAC,MAAD,CAAxB,CADD,CAEP,OAAQA,OAAO,CAAC,MAAD,CAAP,CAAgBI,GAAhB,CACJ,SAAAC,MAAM,CAAG,CACL,GAAGH,SAAS,EAAIG,MAAM,CAACA,MAAM,CAACC,MAAP,CAAcR,UAAf,CAAtB,CACIG,KAAK,EAAE,CAAP,CACJC,SAAS,CAAGG,MAAM,CAACA,MAAM,CAACC,MAAP,CAAcR,UAAf,CAAlB,CACA,MAAO,CAACG,KAAD,EAAQE,MAAR,CAAeE,MAAf,CAAP,CACH,CANG,CAFD,CAAP,CAYJ;AACA,MAAO,CACH,OAAQ,CAAC,OAAD,EAAUF,MAAV,CAAiBH,OAAO,CAAC,MAAD,CAAxB,CADL,CAEH,OAAQA,OAAO,CAAC,MAAD,CAAP,CAAgBO,MAAhB,CAAuB,SAAAF,MAAM,QAAIA,CAAAA,MAAM,CAAC,CAAD,CAAN,EAAaR,MAAjB,EAA7B,EAAsDO,GAAtD,CAA0D,SAAAC,MAAM,QAAI,CAAC,EAAEJ,KAAH,EAAUE,MAAV,CAAiBE,MAAjB,CAAJ,EAAhE,CAFL,CAAP,CAIC,CAtBE,CAAP,CAuBH,CA/BD,CAiCA,cAAeX,CAAAA,UAAf","sourcesContent":["import resultID from './resultid'\nimport fetchResults from './fetch'\n\nconst getResults = (contest, level, county, scoreIndex=1) => {\n    \n    /*if(window.sessionStorage.getItem(resultID(contest, level)) == null\n    || window.sessionStorage.getItem(resultID(contest, level)).length == 0){\n        fetchResults(contest, level);\n    }\n\n    const results = JSON.parse(window.sessionStorage.getItem(resultID(contest, level)));*/\n    return fetchResults(contest, level).then(\n        results =>{\n        let count = 0, lastScore = -1;\n\n        if (county == 'general') \n            return {\n            \"head\": [\"Index\"].concat(results[\"head\"]),\n            \"body\": results[\"body\"].map(\n                result =>{\n                    if(lastScore != result[result.length-scoreIndex])\n                        count+=1;\n                    lastScore = result[result.length-scoreIndex];\n                    return [count].concat(result);\n                }\n            )\n            };\n    \n        //console.log(results);\n        return {\n            \"head\": [\"Index\"].concat(results[\"head\"]),\n            \"body\": results[\"body\"].filter(result => result[0] == county).map(result => [++count].concat(result))\n            };\n        });\n}\n\nexport default getResults;"]},"metadata":{},"sourceType":"module"}